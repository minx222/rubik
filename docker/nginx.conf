user  nginx;
worker_processes  4;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
  worker_connections  1024;
}


http {
	include    /etc/nginx/mime.types;
	default_type  application/octet-stream;

 	sendfile        on;

  gzip on; 
	#开启gzip静态压缩功能
	gzip_static on; 
	#gzip缓存大小
	gzip_buffers 4 16k;
	#gzip http版本
	gzip_http_version 1.1;
	#gzip 压缩级别 1-10 
	gzip_comp_level 5;
	#gzip 压缩类型
	gzip_types text/plain text/css application/json application/javascript text/xml;
	# 是否在http header中添加Vary: Accept-Encoding，建议开启
	gzip_vary on;

	server {
		listen      12100;
		root   /apps/webapps/dist/admin;
		index  /index.html;
		location / {
			try_files $uri $uri/ /index.html;

			# 配置静态文件的缓存策略
			location ~* \.(jpg|jpeg|png|gif|ico|css)$ {
				# 添加 Cache-Control 头，指定强缓存时间为 30 天
				expires 2592000;
				add_header Cache-Control "public, max-age=2592000"; 
			}

			# 配置bundle资源的缓存策略
			location ~* \.js$ {
				# 使用 ETag 头进行资源比对
				etag on;
				# 匹配包含 "bundle" 且以 ".js" 结尾的文件
				if ($request_uri ~* /bundle.*\.js) {
					# 对于其他 .js 文件，设置默认缓存策略
					add_header Cache-Control "public, max-age=31536000";
					expires 31536000;
					
					# 如果客户端发送了 If-None-Match 或 If-Modified-Since 头，则返回304
					break;
				}

				# 对于其他 .js 文件，设置默认缓存策略
				add_header Cache-Control "public, max-age=2592000";
				expires 2592000;
			}
		}
	}
}
